# This is a basic workflow to help you get started with Actions

name: Release

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
  push:
    branches: [master]

jobs:
  build:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Cache multiple paths
        uses: actions/cache@v2
        with:
          path: |
            ~/cache
            !~/cache/exclude
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2-beta
        with:
          node-version: "14"

      - name: Increment version
        run: npm version patch --no-git-tag-version

      - name: Install dependancies
        run: npm install

      - name: Build project
        run: npm run dist

      - name: Get package version
        run: |
          PACKAGE_VERSION=$(cat package.json \
            | grep version \
            | head -1 \
            | awk -F: '{ print $2 }' \
            | sed 's/[",]//g' \
            | tr -d '[[:space:]]')
          echo $PACKAGE_VERSION
          echo ::set-env name=PACKAGE_VERSION::$(echo $PACKAGE_VERSION)

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.PACKAGE_VERSION }}
          release_name: v${{ env.PACKAGE_VERSION }}
          draft: false
          prerelease: false

      - name: "Commit updated package.json to repo"
        uses: stefanzweifel/git-auto-commit-action@v4.4.0
        with:
          commit_message: "Created new package version"
          file_pattern: ./package*.json
          push_options: "--force"

      - run: |
          cd dist
          ls
          echo $(test -f "Google Teams-${{ env.PACKAGE_VERSION }}-mac.zip")
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "Google Teams-${{ env.PACKAGE_VERSION }}-mac.zip"
          asset_name: "Google Teams-${{ env.PACKAGE_VERSION }}-mac.zip"
          asset_content_type: application/zip
